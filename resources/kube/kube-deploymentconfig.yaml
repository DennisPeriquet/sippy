apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: kube-sippy
    app.kubernetes.io/component: kube-sippy
    app.kubernetes.io/instance: kube-sippy
  name: kube-sippy
  namespace: sippy
spec:
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    deploymentconfig: kube-sippy
  strategy:
    # This strategy ensures that on updates we roll out one container at a time, with a 10s
    # pause after each is ready.
    type: Rolling
    rollingParams:
      # this pre hook runs once before each new deployment rollout begins.
      # we use this mechanism to update the db schema so pods don't start at once and
      # fight over making schema updates.
      pre:
        failurePolicy: Retry
        execNewPod:
          containerName: sippy
          command:
          - /bin/sippy
          - --init-database
          - --log-level=debug
          env:
          - name: SIPPY_DATABASE_DSN
            valueFrom:
              secretKeyRef:
                name: kube-postgres
                key: dsn
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      creationTimestamp: null
      labels:
        deploymentconfig: kube-sippy
    spec:
      containers:
      - image: docker.io/openshift/sippy
        imagePullPolicy: Always
        name: sippy
        ports:
        - name: www
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 2112
          protocol: TCP
        resources:
          limits:
            memory: 1500M
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        command:
        - /bin/sippy
        args:
          - --server
          - --dashboard
          - kube-master=sig-release-master-blocking,sig-release-master-informing=
          - --mode=kube
          - --db-only-mode
        env:
          - name: SIPPY_DATABASE_DSN
            valueFrom:
              secretKeyRef:
                name: kube-postgres
                key: dsn
      dnsPolicy: ClusterFirst
      restartPolicy: Always
  triggers:
  - type: ConfigChange
  - imageChangeParams:
      automatic: true
      containerNames:
      - sippy
      - fetchdata
      from:
        kind: ImageStreamTag
        name: sippy:latest
        namespace: sippy
    type: ImageChange
